import fs from 'node:fs';import path from 'node:path';
export type Product={handle:string;title:string;vendor?:string;type?:string;tags?:string[];sku?:string;price?:number;qty?:number;image?:string;};
function parseLine(l:string){const r:string[]=[];let c='';let q=false;for(let i=0;i<l.length;i++){const ch=l[i];if(ch==='"'){q=!q;}else if(ch===','&&!q){r.push(c);c='';}else{c+=ch;}}r.push(c);return r.map(s=>s.replace(/^\s+|\s+$/g,''));}
export function readProductsFromCSV(rel:string):Product[]{const fp=path.join(process.cwd(),rel);const content=fs.readFileSync(fp,'utf8');const lines=content.split(/\r?\n/).filter(Boolean);if(lines.length<2)return[];const header=parseLine(lines[0]);const gi=(n:string)=>header.indexOf(n);const idx={Handle:gi('Handle'),Title:gi('Title'),Vendor:gi('Vendor'),Type:gi('Type'),Tags:gi('Tags'),SKU:gi('Variant SKU'),Price:gi('Variant Price'),Qty:gi('Variant Inventory Qty'),Image:gi('Image Src')};return lines.slice(1).map(ln=>{const cols=parseLine(ln);const tags=idx.Tags>=0&&cols[idx.Tags]?cols[idx.Tags].split(',').map(t=>t.trim()):[];const price=idx.Price>=0&&cols[idx.Price]?Number(cols[idx.Price]):undefined;const qty=idx.Qty>=0&&cols[idx.Qty]?Number(cols[idx.Qty]):undefined;return{handle:idx.Handle>=0?cols[idx.Handle]:'',title:idx.Title>=0?cols[idx.Title]:'',vendor:idx.Vendor>=0?cols[idx.Vendor]:undefined,type:idx.Type>=0?cols[idx.Type]:undefined,tags,sku:idx.SKU>=0?cols[idx.SKU]:undefined,price,qty,image:idx.Image>=0?cols[idx.Image]:undefined};}).filter(p=>p.handle);}